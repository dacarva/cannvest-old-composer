/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace org.agrotracker.network

/**
 * The type of perishable product being produced
 */
enum ProductType {
  o CANNABIS
  o COCA
  o POPPY
}

/**
 * The status of the production
 */
enum ProductionStatus {
  o PLANTED
  o HARVESTED
  o DELIVERED
}

/**
 * A concept for a simple street address
 */
concept Address {
  o String city optional
  o String country
  o String street optional
  o String zip optional
}

//----------------PARTICIPANTS-------------------------//

/**
 * An abstract participant type in this business network
 */
abstract participant Business identified by participantId {
  o String participantId //NIT , CC, Passport Etc
  o Double accountBalance
  o Address address
}

/**
 * A Government Entity is a type of participant in the network
 */
participant Government extends Business {
}

/**
 * A Crop producer is a type of participant in the network
 */
participant Producer extends Business {
}

/**
 * A Consumer Entity is a type of participant in the network
 */
participant Consumer extends Business {
}
/**
 * An IoTDevice is any device that is part of the network
 */
abstract participant IoTDevice identified by deviceId {
  o String deviceId
}

/**
 * An IoT temperature sensor
 */
participant TemperatureSensor extends IoTDevice {
}









//-----------------------------EXAMPLE ONLY -----------------------//


participant SampleParticipant identified by participantId {
  o String participantId
  o String firstName
  o String lastName
}

asset SampleAsset identified by assetId {
  o String assetId
  --> SampleParticipant owner
  o String value
}

transaction SampleTransaction {
  --> SampleAsset asset
  o String newValue
}

event SampleEvent {
  --> SampleAsset asset
  o String oldValue
  o String newValue
}
